name: tests

on: [push, pull_request]

jobs:
  format:
    # We want all subsequent steps of CI to refer to the fresh version of code,
    # so run this before anything else.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Black
        run: pip install black
      - name: Run black --check .
        run: black --check .
      - name: If needed, commit black changes to the pull request
        if: failure()
        run: |
          black .
          git config --global user.name 'autoblack'
          git config --global user.email 'cclauss@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup: Format Python code with Black"
          git push
  test:
    needs: format
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
        
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -e .
    - name: Install test dependencies
      run: |        
        pip install -r requirements.txt
    - name: pytest
      run: |
         pytest tests dedupe --cov dedupe
    - env:
        COVERALLS_PARALLEL: true
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: job-${{ matrix.os}}-${{ matrix.python-version }}
      name: Submit to coveralls
      run: |
        pip install https://github.com/bboe/coveralls-python/archive/github_actions.zip
        coveralls
    - name: flake8
      run: |
         flake8 dedupe tests
    - name: Static Testing
      run: |        
        mypy --ignore-missing-imports dedupe
    - name: Integration test, record link
      run: |
        python tests/canonical_gazetteer.py -vv
        python tests/canonical_matching.py -vv
    - name: Integration test, dedupe
      run: |
        python tests/canonical.py -vv
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@57daa114ba54fd8e1c8563e8027325c0bf2f5e80
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
  wheels:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: test
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2    
    - name: Build wheels
      uses: pypa/cibuildwheel@2.5.0
      env:
        CIBW_ARCHS_MACOS: x86_64 arm64 universal2
    - name: Build sdist
      run: |
        pip install build
        python -m build --sdist
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload --skip-existing wheelhouse/*.whl
        twine upload dist/*
      continue-on-error: true
